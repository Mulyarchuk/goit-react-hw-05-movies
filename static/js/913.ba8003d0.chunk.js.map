{"version":3,"file":"static/js/913.ba8003d0.chunk.js","mappings":"+SAEMA,EAAO,mCACbC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACAD,EAAAA,EAAAA,IAAA,qCAAwCD,IADxC,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKXC,EAAe,mCAAG,WAAMC,GAAN,uFACJN,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,4DAA6FO,IADzF,cACrBJ,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,sDAKfG,EAAc,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCT,EAAtC,oBADG,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKdM,EAAe,mCAAG,WAAMD,GAAN,uFACJR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,EAA9C,oBADI,cACrBG,EADqB,yBAEpBA,EAASC,KAAKO,MAFM,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,uFACJR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,EAA9C,2BADI,cACrBG,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qD,mFCtBfQ,EAAQ,WACjB,OAAO,SAAC,KAAD,CACPC,OAAO,KACPC,MAAM,KACNC,UAAU,uBACVC,aAAc,CAAC,EACfC,aAAa,uBACbC,YAAc,UACdC,SAAW,WAEd,C,+KCXYC,EAAYC,EAAAA,GAAAA,GAAH,uGAQTC,EAAmBD,EAAAA,GAAAA,IAAH,mEAMhBE,EAAQF,EAAAA,GAAAA,OAAF,gK,SC+DnB,EAzEyB,WAAK,IAAD,QACtBb,GAAWgB,EAAAA,EAAAA,MAAXhB,QACP,GAAkCiB,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAkB7C,OAhBAC,EAAAA,EAAAA,YAAU,WACJ,IAAMC,EAAc,mCAAG,2FACrBP,GAAW,GADU,mBAGQtB,EAAAA,EAAAA,IAAeC,GAHvB,OAGb6B,EAHa,OAInBV,EAAaU,GAJM,gDAMnBC,QAAQC,IAAR,MANmB,yBAQnBV,GAAW,GARQ,4EAAH,qDAWpBO,GAEL,GAAE,CAAC5B,KAGA,4BACA,SAAC,KAAD,CAAMgC,GAAIR,EAAV,UACI,SAACT,EAAD,CAAQkB,KAAK,SAAb,uBAIDb,IAAW,SAAChB,EAAA,EAAD,IACXc,IACC,UAACJ,EAAD,YACE,gBACER,MAAM,QACN4B,IAAK,kCAAoChB,EAAUiB,YACnDC,IAAKlB,EAAUmB,kBAEjB,4BACE,0BACGnB,EAAUoB,MADb,KACsBpB,EAAUqB,aAAaC,MAAM,EAAG,GADtD,QAGA,0CAA0C,IAAvBtB,EAAUuB,aAAkB,GAA/C,QACA,sCACA,uBAAIvB,EAAUwB,YACd,oCACA,SAAC9B,EAAD,UACGM,EAAUyB,OAAOC,KAAI,SAAAC,GAAK,OACzB,wBAAoBA,EAAMC,MAAjBD,EAAME,GADU,aAOnC,mBACA,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMf,GAAI,OAAQP,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAAjD,qBAEF,yBACE,SAAC,KAAD,CAAMM,GAAI,UAAWP,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAApD,2BAGJ,mBACA,SAAC,KAAD,SAKP,C","sources":["Api.js","components/Loader/Loader.jsx","pages/MovieDetailspage.styled.js","pages/MovieDetailspage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY =`415d7db702870471bef7c92959f9f781`;\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async ()=>{\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const getSearchMovies = async query => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`);\n    return response.data.results;\n};\n\nexport const getMovieDatail = async movieId =>{\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n    };\n\nexport const getMovieReviews = async movieId =>{\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n};\n\n","import React from 'react';\nimport { ProgressBar } from 'react-loader-spinner';\n\nexport const Loader =()=>{\n    return <ProgressBar\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"progress-bar-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"progress-bar-wrapper\"\n    borderColor = '#F4442E'\n    barColor = '#51E5FF'\n  />\n}","import styled from \"styled-components\";\n\nexport const GenreList = styled.ul`\ndisplay: inline-flex;\ngap: 12px;\nlist-style: none;\nmargin: 0;\npadding: 0;\n`;\n\nexport const MovieDetailsList = styled.div`\ndisplay: flex;\nmargin: 24px;\ngap: 24px;\n`;\n\nexport const Button =styled.button`\npadding: 8px 16px;\nborder-radius: 4px;\nborder: none;\ntext-decoration: none;\nbackground: #7BA7AB;\ncolor: black;\nfont-weight: 500;\n`\n","import { getMovieDatail } from \"Api\";\nimport { useState, useEffect } from \"react\";\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { Loader } from \"components/Loader/Loader\";\nimport { GenreList,MovieDetailsList, Button } from \"./MovieDetailspage.styled\";\n\nconst MovieDetailspage = ()=>{\nconst {movieId} = useParams();\nconst [movieInfo, setMovieInfo] = useState(null);\nconst [loading, setLoading] = useState(false);\nconst location = useLocation();\n\nconst BackLinkHref = location.state?.from ?? \"/\";\n\nuseEffect(() => {\n      const onMovieDetails = async () => {\n        setLoading(true);\n        try {\n          const movieDetails = await getMovieDatail(movieId);\n          setMovieInfo(movieDetails);\n        } catch (error) {\n          console.log(error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      onMovieDetails();\n    \n}, [movieId]);\n\nreturn (\n    <div>\n    <Link to={BackLinkHref}>\n        <Button type=\"button\">\n          Go back\n        </Button>\n      </Link>\n      {loading && <Loader />}\n      {movieInfo && (\n        <MovieDetailsList>\n          <img\n            width=\"300px\"\n            src={'https://image.tmdb.org/t/p/w500' + movieInfo.poster_path}\n            alt={movieInfo.original_title}\n          />\n          <div>\n            <h1>\n              {movieInfo.title} ({movieInfo.release_date.slice(0, 4)})\n            </h1>\n            <p>Vote average: {(movieInfo.vote_average*100)/10}%</p>\n            <h2>Overview</h2>\n            <p>{movieInfo.overview}</p>\n            <h2>Genres</h2>\n            <GenreList>\n              {movieInfo.genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </GenreList>\n          </div>\n        </MovieDetailsList>\n      )}\n      <hr />\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to={'cast'} state={{ from: location.state?.from }}>Cast</Link>\n          </li>\n          <li>\n            <Link to={'reviews'} state={{ from: location.state?.from }}>Reviews</Link>\n          </li>\n        </ul>\n        <hr />\n        <Outlet />\n      </div>\n    </div>\n\n)\n};\nexport default MovieDetailspage;"],"names":["API_KEY","axios","getTrending","response","data","results","getSearchMovies","query","getMovieDatail","movieId","getMovieCredits","cast","getMovieReviews","Loader","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","GenreList","styled","MovieDetailsList","Button","useParams","useState","movieInfo","setMovieInfo","loading","setLoading","location","useLocation","BackLinkHref","state","from","useEffect","onMovieDetails","movieDetails","console","log","to","type","src","poster_path","alt","original_title","title","release_date","slice","vote_average","overview","genres","map","genre","name","id"],"sourceRoot":""}