{"version":3,"file":"static/js/387.6776bd6c.chunk.js","mappings":"+SAEMA,EAAO,mCACbC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACAD,EAAAA,EAAAA,IAAA,qCAAwCD,IADxC,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKXC,EAAe,mCAAG,WAAMC,GAAN,uFACJN,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,4DAA6FO,IADzF,cACrBJ,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,sDAKfG,EAAc,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCT,EAAtC,oBADG,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKdM,EAAe,mCAAG,WAAMD,GAAN,uFACJR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,EAA9C,oBADI,cACrBG,EADqB,yBAEpBA,EAASC,KAAKO,MAFM,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,uFACJR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,EAA9C,2BADI,cACrBG,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qD,0JCvBfQ,E,OAAWC,GAAAA,GAAH,yL,SCkDrB,EA7Ca,WACb,IAAOL,GAAWM,EAAAA,EAAAA,MAAXN,QACP,GAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAkBE,OAfFC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,2FACtBF,GAAW,GADW,mBAGCV,EAAAA,EAAAA,IAAgBD,GAHjB,OAGdQ,EAHc,OAIpBC,EAAUD,GAJU,gDAMpBM,QAAQC,IAAR,MANoB,yBAQpBJ,GAAW,GARS,4EAAH,qDAWrBE,GACD,GAAE,CAACb,KAGA,2BACGU,IAAW,SAACM,EAAA,EAAD,KACZ,SAACZ,EAAD,UACGI,EAAOS,KAAI,SAAAC,GAAK,OACf,2BACE,gBACEC,MAAM,QACNC,OAAO,QACPC,IAAKH,EAAMI,aACP,kCAAoCJ,EAAMI,aAC1C,sCAEJC,IAAKL,EAAMM,iBAEb,uBAAIN,EAAMO,QACV,uCAAeP,EAAMQ,eAXdR,EAAMS,GADA,QAkBxB,C,mFC/CYX,EAAQ,WACjB,OAAO,SAAC,KAAD,CACPI,OAAO,KACPD,MAAM,KACNS,UAAU,uBACVC,aAAc,CAAC,EACfC,aAAa,uBACbC,YAAc,UACdC,SAAW,WAEd,C","sources":["Api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY =`415d7db702870471bef7c92959f9f781`;\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async ()=>{\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const getSearchMovies = async query => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`);\n    return response.data.results;\n};\n\nexport const getMovieDatail = async movieId =>{\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n    };\n\nexport const getMovieReviews = async movieId =>{\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n};\n\n","import styled from \"styled-components\";\n\nexport const CastList = styled.ul`\ndisplay: grid; \ngrid-template-columns: repeat(3, 1fr); \ngrid-template-rows: repeat(4, 1fr); \ngrid-column-gap: 10px;\ngrid-row-gap: 10px; \nlist-style: none;\n`;","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport {getMovieCredits} from \"Api\";\nimport {Loader} from \"components/Loader/Loader\";\nimport {CastList} from \"./Cast.styled\";\n\n\nconst Cast = () =>{\nconst {movieId} = useParams();\nconst [actors, setActors] = useState([]);\nconst [loading, setLoading] = useState(false);\n\n\nuseEffect(() => {\n  const onActorsOfMovie = async () => {\n    setLoading(true);\n    try {\n      const actors = await getMovieCredits(movieId);\n      setActors(actors);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  onActorsOfMovie();\n}, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <CastList>\n        {actors.map(actor => (\n          <li key={actor.id}>\n            <img\n              width=\"200px\"\n              height=\"350px\"\n              src={actor.profile_path\n                ? 'https://image.tmdb.org/t/p/w500' + actor.profile_path \n                : 'https://via.placeholder.com/960x240'  \n              }\n              alt={actor.original_name}\n            />\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </CastList>\n    </div>\n  );\n};\n\nexport default Cast;","import React from 'react';\nimport { ProgressBar } from 'react-loader-spinner';\n\nexport const Loader =()=>{\n    return <ProgressBar\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"progress-bar-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"progress-bar-wrapper\"\n    borderColor = '#F4442E'\n    barColor = '#51E5FF'\n  />\n}"],"names":["API_KEY","axios","getTrending","response","data","results","getSearchMovies","query","getMovieDatail","movieId","getMovieCredits","cast","getMovieReviews","CastList","styled","useParams","useState","actors","setActors","loading","setLoading","useEffect","onActorsOfMovie","console","log","Loader","map","actor","width","height","src","profile_path","alt","original_name","name","character","id","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor"],"sourceRoot":""}