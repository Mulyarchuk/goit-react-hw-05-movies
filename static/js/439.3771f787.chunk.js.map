{"version":3,"file":"static/js/439.3771f787.chunk.js","mappings":"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","sources":["Api.js","components/Loader/Loader.jsx","components/SearchMovie/SearchMovie.styled.js","components/SearchMovie/SearchMovie.jsx","pages/Moviepage.styled.js","pages/Moviepage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY =`415d7db702870471bef7c92959f9f781`;\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async ()=>{\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const getSearchMovies = async query => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`);\n    return response.data.results;\n};\n\nexport const getMovieDatail = async movieId =>{\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n    };\n\nexport const getMovieReviews = async movieId =>{\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n};\n\n","import React from 'react';\nimport { ProgressBar } from 'react-loader-spinner';\n\nexport const Loader =()=>{\n    return <ProgressBar\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"progress-bar-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"progress-bar-wrapper\"\n    borderColor = '#F4442E'\n    barColor = '#51E5FF'\n  />\n}","import styled from \"styled-components\";\n\nexport const SearchMovieList = styled.ul`\ndisplay: grid; \ngrid-template-columns: repeat(3, 1fr); \ngrid-template-rows: repeat(4, 1fr); \ngrid-column-gap: 10px;\ngrid-row-gap: 10px; \nlist-style: none;\n`;\n\nexport const Title = styled.p`\nfont-size: 15px;\nfont-weight: 700;\ntext-decoration: none;\ncolor: black;`","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { SearchMovieList, Title} from './SearchMovie.styled';\n\nconst SearchMovie = ({films}) =>{\n    const location = useLocation();\nreturn (\n    <SearchMovieList>\n        {films && films.map(film=>(\n         <li key={film.id}>\n            <Link to={`/movies/${film.id}`} state={{ from: location }}>\n            <img src={\n                      film.poster_path\n                        ? 'https://image.tmdb.org/t/p/w500' + film.poster_path\n                        : 'https://via.placeholder.com/960x240'\n                    }\n                    alt=\"About movie\"\n                    width=\"250\"\n                    height=\"400\"\n                  />\n              <Title>{film.title}</Title>\n            </Link>\n          </li>\n        ))}  \n    </SearchMovieList>\n)\n}\n\nSearchMovie.propTypes = {\n    films: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        id: PropTypes.number.isRequired,\n      })\n    ),\n  };\n  \n  export default SearchMovie;","import styled from \"styled-components\";\n\nexport const Form = styled.form`\ndisplay: flex;\nwidth: 320px;\ngap: 20px;\n`;\n\nexport const Input = styled.input`\nwidth: 100%;\nheight: 35px;\npadding-left: 10px;\nborder: 2px solid #7BA7AB;\nborder-radius: 5px;\noutline: none;\nbackground: #F9F0DA;\ncolor: #9E9C9C;\n`;\nexport const Button = styled.button`  \nwidth: 60px;\nheight: 35px;\nborder: none;\nbackground: #7BA7AB;\nborder-radius: 5px;\ncursor: pointer;\n\n`;","import { useState,useEffect } from \"react\";\nimport { getSearchMovies } from \"Api\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useSearchParams } from 'react-router-dom';\nimport SearchMovie from \"components/SearchMovie/SearchMovie\";\nimport { Form, Input, Button } from \"./Moviepage.styled\"\n\nconst Moviepage = () =>{\n    const [query,setQuery] = useState(``);\n    const [searchFilms,setSearchFilms] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const queryMovie = searchParams.get('query') ?? '';\n\n    const handelChange = e => {\n        const { value } = e.target;\n        setQuery(value);\n      };\n      const handleSubmit = e => {\n        e.preventDefault();\n        setSearchParams({ query });\n        setQuery('');\n      };\n \n\n\n     useEffect(() => {\n        if (queryMovie) {\n          const onSearchMovie = async () => {\n            setLoading(true);\n            try {\n              const search = await getSearchMovies(queryMovie);\n              setSearchFilms(search);\n            } catch (error) {\n              console.log(error);\n            } finally {\n              setLoading(false);\n            }\n          };\n          onSearchMovie();\n        }\n    }, [queryMovie]);\n\n    return (\n        <main>\n            <Form onSubmit={handleSubmit}>\n            <Input\n            onChange={handelChange}\n            type=\"text\"\n            placeholder=\"Search movie\"\n            name=\"query\"\n            value={query}\n            />\n            <Button type=\"submit\">Search</Button>\n            </Form>\n            {loading && <Loader />}\n            {searchFilms && <SearchMovie films={searchFilms}/>}\n            {searchFilms &&\n            searchFilms.length === 0 &&\n            (queryMovie ? (\n              <p>Nothing found!</p>\n            ) : (\n              <p>Please, enter your request !</p>\n            ))}\n           \n        </main>\n        );\n};\nexport default Moviepage;"],"names":["API_KEY","axios","getTrending","response","data","results","getSearchMovies","query","getMovieDatail","movieId","getMovieCredits","cast","getMovieReviews","Loader","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","SearchMovieList","styled","Title","films","location","useLocation","map","film","to","id","state","from","src","poster_path","alt","title","Form","Input","Button","useState","setQuery","searchFilms","setSearchFilms","loading","setLoading","useSearchParams","searchParams","setSearchParams","queryMovie","get","useEffect","onSearchMovie","search","console","log","onSubmit","e","preventDefault","onChange","value","target","type","placeholder","name","SearchMovie","length"],"sourceRoot":""}