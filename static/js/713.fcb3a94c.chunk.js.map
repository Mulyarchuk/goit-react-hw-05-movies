{"version":3,"file":"static/js/713.fcb3a94c.chunk.js","mappings":"+SAEMA,EAAO,mCACbC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACAD,EAAAA,EAAAA,IAAA,qCAAwCD,IADxC,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKXC,EAAe,mCAAG,WAAMC,GAAN,uFACJN,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,4DAA6FO,IADzF,cACrBJ,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,sDAKfG,EAAc,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCT,EAAtC,oBADG,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKdM,EAAe,mCAAG,WAAMD,GAAN,uFACJR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,EAA9C,oBADI,cACrBG,EADqB,yBAEpBA,EAASC,KAAKO,MAFM,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,uFACJR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,EAA9C,2BADI,cACrBG,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qD,mFCtBfQ,EAAQ,WACjB,OAAO,SAAC,KAAD,CACPC,OAAO,KACPC,MAAM,KACNC,UAAU,uBACVC,aAAc,CAAC,EACfC,aAAa,uBACbC,YAAc,UACdC,SAAW,WAEd,C,iGCXYC,EAAkBC,EAAAA,GAAAA,GAAH,yLASfC,EAAQD,EAAAA,GAAAA,EAAH,kG,SC0BhB,EAjCkB,SAAC,GAAY,IAAXE,EAAU,EAAVA,MACZC,GAAWC,EAAAA,EAAAA,MACrB,OACI,SAACL,EAAD,UACKG,GAASA,EAAMG,KAAI,SAAAC,GAAI,OACvB,yBACG,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAA/C,WACA,gBAAKQ,IACKL,EAAKM,YACD,kCAAoCN,EAAKM,YACzC,sCAENC,IAAI,cACJpB,MAAM,MACND,OAAO,SAEb,SAACS,EAAD,UAAQK,EAAKQ,YAXTR,EAAKE,GADS,KAkB/B,C,kHCMD,UA3BiB,WACb,OAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAMb,EAAN,KAAac,EAAb,KACA,GAA2BD,EAAAA,EAAAA,WAAS,GAApC,eAAME,EAAN,KAAeC,EAAf,KAiBD,OAfAC,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAiB,mCAAG,2FACtBF,GAAW,GADW,mBAGMtC,EAAAA,EAAAA,MAHN,OAGhByC,EAHgB,OAItBL,EAASK,GAJa,gDAMtBC,QAAQC,IAAR,MANsB,yBAQtBL,GAAW,GARW,4EAAH,qDAWvBE,GAEA,GAAC,KAED,6BACI,kDACClB,IAAS,SAAC,IAAD,CAAaA,MAAOA,IAC7Be,IAAW,SAAC,IAAD,MAGnB,C","sources":["Api.js","components/Loader/Loader.jsx","components/SearchMovie/SearchMovie.styled.js","components/SearchMovie/SearchMovie.jsx","pages/Homepage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY =`415d7db702870471bef7c92959f9f781`;\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async ()=>{\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const getSearchMovies = async query => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`);\n    return response.data.results;\n};\n\nexport const getMovieDatail = async movieId =>{\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n    };\n\nexport const getMovieReviews = async movieId =>{\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n};\n\n","import React from 'react';\nimport { ProgressBar } from 'react-loader-spinner';\n\nexport const Loader =()=>{\n    return <ProgressBar\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"progress-bar-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"progress-bar-wrapper\"\n    borderColor = '#F4442E'\n    barColor = '#51E5FF'\n  />\n}","import styled from \"styled-components\";\n\nexport const SearchMovieList = styled.ul`\ndisplay: grid; \ngrid-template-columns: repeat(3, 1fr); \ngrid-template-rows: repeat(4, 1fr); \ngrid-column-gap: 10px;\ngrid-row-gap: 10px; \nlist-style: none;\n`;\n\nexport const Title = styled.p`\nfont-size: 15px;\nfont-weight: 700;\ntext-decoration: none;\ncolor: black;`","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { SearchMovieList, Title} from './SearchMovie.styled';\n\nconst SearchMovie = ({films}) =>{\n    const location = useLocation();\nreturn (\n    <SearchMovieList>\n        {films && films.map(film=>(\n         <li key={film.id}>\n            <Link to={`/movies/${film.id}`} state={{ from: location }}>\n            <img src={\n                      film.poster_path\n                        ? 'https://image.tmdb.org/t/p/w500' + film.poster_path\n                        : 'https://via.placeholder.com/960x240'\n                    }\n                    alt=\"About movie\"\n                    width=\"250\"\n                    height=\"400\"\n                  />\n              <Title>{film.title}</Title>\n            </Link>\n          </li>\n        ))}  \n    </SearchMovieList>\n)\n}\n\nSearchMovie.propTypes = {\n    films: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        id: PropTypes.number.isRequired,\n      })\n    ),\n  };\n  \n  export default SearchMovie;","import { getTrending } from \"Api\";\nimport { useState,useEffect } from \"react\";\nimport SearchMovie from \"components/SearchMovie/SearchMovie\";\nimport {Loader} from \"components/Loader/Loader\";\n\nconst Homepage = () =>{\n    const[films, setFilms] =useState([]);\n    const[loading, setLoading]=useState(false);\n\n   useEffect(()=>{\n    const FetchTrendingFilm = async ()=>{\n        setLoading(true);\n       try {\n        const trendingFilms = await getTrending();\n        setFilms(trendingFilms);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    FetchTrendingFilm();\n    \n   },[]);\n   return (\n    <main>\n        <h1>Trending movies today</h1>\n        {films && <SearchMovie films={films} />}\n        {loading && <Loader />}\n    </main>\n    );\n}\nexport default Homepage;"],"names":["API_KEY","axios","getTrending","response","data","results","getSearchMovies","query","getMovieDatail","movieId","getMovieCredits","cast","getMovieReviews","Loader","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","SearchMovieList","styled","Title","films","location","useLocation","map","film","to","id","state","from","src","poster_path","alt","title","useState","setFilms","loading","setLoading","useEffect","FetchTrendingFilm","trendingFilms","console","log"],"sourceRoot":""}